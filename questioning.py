# Есть результаты соц.опроса 5-ти работников организации по поводу
# вариантов улучшения условий работы в виде словаря:
# {'s1': {'1-a','2-b'..}, 's2': {'1-b','2-a'..}...}
# Вывести самые популярные варианты через '|' в порядке возрастания номеров.
# Вывести только те варианты ответов, которые встречаются у респондентов больше 2-х раз.

D = dict(s1={'1-c', '2-d', '3-a', '4-c', '5-b'},
         s2={'1-c', '2-b', '3-a', '4-a', '5-c'},
         s3={'1-c', '2-a', '3-b', '4-b', '5-a'},
         s4={'1-a', '2-c', '3-c', '4-d', '5-c'},
         s5={'1-a', '2-d', '3-a', '4-c', '5-d'},
         )
print(D)
L = []
for i in D.values():
    L.append(i)
print(L)
P = []  # список пересечений
for i in range(1, len(L)): # начинаем со 2-го множества
    P.append(L[0] & L[i])
    L[0] = L[0] | L[i] # объединяем после нахождения пересечения
    print(L)
print('P:', P) # элементы в списке пересечений разной длины
Pop = []
for i in range(len(P)):
    for j in P[i]:
        Pop.append(j)  # список самых популярных вариантов с повторами
print(Pop)

Pop_unic = set()
Pop_unic_2 = set()
for i in Pop:
    Pop_unic.add(i)
    if Pop.count(i)>1: # Pop.count == 1 --> вариант ответа встретился 2 раза, == 2 --> 3 раза ...
        Pop_unic_2.add(i)

Pop_sort = list(Pop_unic)
Pop_sort_2 = list(Pop_unic_2)
Pop_sort.sort()
Pop_sort_2.sort()
print('Популярные варианты:')
for i in Pop_sort:
    print(i, end='|')
print('\nПопулярные варианты, которых больше 2-х:')
for i in Pop_sort_2:
    print(i, end='|')
